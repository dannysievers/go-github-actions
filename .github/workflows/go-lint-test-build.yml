name: Lint, Test, and Build
on:
  push:
    branches:
      - master
    paths_ignore:
      - '**.md'
      - '.gitignore'
  pull_request:
    paths_ignore:
      - '**.md'
      - '.gitignore'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1

      - name: Lint Go Code
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin # temporary fix for https://github.com/actions/setup-go/issues/12
          go get -u golang.org/x/lint/golint
          golint ./... -set_exit_status
          # go list ./... | grep -v /vendor/ | xargs -L1 golint -set_exit_status
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1

      # temporary fix for https://github.com/actions/setup-go/issues/12
      - name: Set GOPATH + GOBIN
        run: |
          export GOPATH=$(go env GOPATH)
          export GOBIN=$(go env GOPATH)/bin
          mkdir -p $GOPATH/pkg
          mkdir -p $GOBIN
          mkdir -p $GOPATH/src/github.com/$GITHUB_REPOSITORY
          cp -r $(pwd)/* $GOPATH/src/github.com/$GITHUB_REPOSITORY

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
            export GOPATH=$(go env GOPATH) # temporary fix for https://github.com/actions/setup-go/issues/12
            export PATH=$PATH:$(go env GOPATH)/bin # temporary fix for https://github.com/actions/setup-go/issues/12
            cd $GOPATH/src/github.com/$GITHUB_REPOSITORY # temporary fix for https://github.com/actions/setup-go/issues/12
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
          fi

      - name: Run Unit tests
        run: |
          go test ./... -coverprofile cover.out -covermode=atomic
          cat cover.out >> coverage.txt

      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.txt